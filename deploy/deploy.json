{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "16346658247668050925"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "wiki",
      "metadata": {
        "description": "A prefix to add to the start of all resource names. Note: A \"unique\" suffix will also be added"
      }
    },
    "mongoUsername": {
      "type": "string",
      "defaultValue": "wikivector"
    },
    "mongoPassword": {
      "type": "securestring",
      "defaultValue": "[format('{0}-{1}', uniqueString(newGuid()), uniqueString(newGuid()))]"
    },
    "allowAllFirewall": {
      "type": "bool",
      "defaultValue": true
    },
    "deployMongovCore": {
      "type": "bool",
      "defaultValue": true
    },
    "deployAzureAISearch": {
      "type": "bool",
      "defaultValue": true
    },
    "deployAzureOpenAI": {
      "type": "bool",
      "defaultValue": true
    },
    "deployWikiAIContainerApp": {
      "type": "bool",
      "defaultValue": true
    },
    "containerAppImage": {
      "type": "string",
      "defaultValue": "ghcr.io/scottholden/wikiai:release"
    },
    "confluenceDomain": {
      "type": "string",
      "defaultValue": ""
    },
    "confluenceEmail": {
      "type": "string",
      "defaultValue": ""
    },
    "confluenceApiKey": {
      "type": "string",
      "defaultValue": ""
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags to apply to all deployed resources"
      }
    }
  },
  "variables": {
    "uniqueNameFormat": "[format('{0}-{{0}}-{1}', parameters('prefix'), uniqueString(resourceGroup().id, parameters('prefix')))]",
    "uniqueShortNameFormat": "[toLower(format('{0}{{0}}{1}', parameters('prefix'), uniqueString(resourceGroup().id, parameters('prefix'))))]",
    "uniqueShortName": "[format(variables('uniqueShortNameFormat'), '')]"
  },
  "resources": [
    {
      "condition": "[parameters('deployMongovCore')]",
      "type": "Microsoft.DocumentDB/mongoClusters/firewallRules",
      "apiVersion": "2023-09-15-preview",
      "name": "[format('{0}/{1}', variables('uniqueShortName'), 'AllowAllAzureServices')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/mongoClusters', variables('uniqueShortName'))]"
      ]
    },
    {
      "condition": "[and(parameters('deployMongovCore'), parameters('allowAllFirewall'))]",
      "type": "Microsoft.DocumentDB/mongoClusters/firewallRules",
      "apiVersion": "2023-09-15-preview",
      "name": "[format('{0}/{1}', variables('uniqueShortName'), 'AllowAll')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/mongoClusters', variables('uniqueShortName'))]"
      ]
    },
    {
      "condition": "[parameters('deployAzureOpenAI')]",
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-10-01-preview",
      "name": "[format('{0}/{1}', format(variables('uniqueNameFormat'), 'openai'), 'gpt-35-turbo-16k')]",
      "sku": {
        "name": "Standard",
        "capacity": 75
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "gpt-35-turbo-16k"
        },
        "dynamicThrottlingEnabled": true,
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai'))]"
      ]
    },
    {
      "condition": "[parameters('deployAzureOpenAI')]",
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-10-01-preview",
      "name": "[format('{0}/{1}', format(variables('uniqueNameFormat'), 'openai'), 'text-embedding-ada-002')]",
      "sku": {
        "name": "Standard",
        "capacity": 75
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "text-embedding-ada-002",
          "version": "2"
        },
        "dynamicThrottlingEnabled": true,
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', format(variables('uniqueNameFormat'), 'openai'), 'gpt-35-turbo-16k')]",
        "[resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai'))]"
      ]
    },
    {
      "condition": "[parameters('deployMongovCore')]",
      "type": "Microsoft.DocumentDB/mongoClusters",
      "apiVersion": "2023-09-15-preview",
      "name": "[variables('uniqueShortName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('mongoUsername')]",
        "administratorLoginPassword": "[parameters('mongoPassword')]",
        "nodeGroupSpecs": [
          {
            "kind": "Shard",
            "nodeCount": 1,
            "sku": "M25",
            "diskSizeGB": 64,
            "enableHa": false
          }
        ]
      }
    },
    {
      "condition": "[parameters('deployAzureAISearch')]",
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[variables('uniqueShortName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "basic"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default",
        "publicNetworkAccess": "enabled",
        "semanticSearch": "free"
      }
    },
    {
      "condition": "[parameters('deployAzureOpenAI')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[format(variables('uniqueNameFormat'), 'openai')]",
      "location": "[parameters('location')]",
      "kind": "OpenAI",
      "sku": {
        "name": "S0"
      },
      "properties": {
        "customSubDomainName": "[format(variables('uniqueNameFormat'), 'openai')]"
      },
      "tags": "[parameters('tags')]"
    },
    {
      "condition": "[parameters('deployWikiAIContainerApp')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('uniqueShortName')]",
      "location": "[parameters('location')]",
      "properties": {
        "retentionInDays": 30,
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "condition": "[parameters('deployWikiAIContainerApp')]",
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2022-06-01-preview",
      "name": "[variables('uniqueShortName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Consumption"
      },
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('uniqueShortName')), '2022-10-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', variables('uniqueShortName')), '2022-10-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('uniqueShortName'))]"
      ]
    },
    {
      "condition": "[parameters('deployWikiAIContainerApp')]",
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-02-preview",
      "name": "[variables('uniqueShortName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('uniqueShortName'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 8080,
            "allowInsecure": false,
            "traffic": [
              {
                "latestRevision": true,
                "weight": 100
              }
            ]
          },
          "secrets": [
            {
              "name": "confluenceapikey",
              "value": "[parameters('confluenceApiKey')]"
            },
            {
              "name": "aoaikey",
              "value": "[if(parameters('deployAzureOpenAI'), listKeys(resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai')), '2023-05-01').key1, 'null')]"
            },
            {
              "name": "mongoconnectionstring",
              "value": "[if(parameters('deployMongovCore'), replace(replace(reference(resourceId('Microsoft.DocumentDB/mongoClusters', variables('uniqueShortName')), '2023-09-15-preview').connectionString, '<user>', parameters('mongoUsername')), '<password>', parameters('mongoPassword')), 'null')]"
            },
            {
              "name": "aisearchkey",
              "value": "[if(parameters('deployAzureAISearch'), listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('uniqueShortName')), '2023-11-01').primaryKey, 'null')]"
            }
          ]
        },
        "template": {
          "revisionSuffix": "release",
          "containers": [
            {
              "name": "wikiai",
              "image": "[parameters('containerAppImage')]",
              "resources": {
                "cpu": "[json('.25')]",
                "memory": ".5Gi"
              },
              "env": [
                {
                  "name": "CONFLUENCE_API_KEY",
                  "secretRef": "confluenceapikey"
                },
                {
                  "name": "CONFLUENCE_DOMAIN",
                  "value": "[parameters('confluenceDomain')]"
                },
                {
                  "name": "CONFLUENCE_EMAIL",
                  "value": "[parameters('confluenceEmail')]"
                },
                {
                  "name": "AOAI_ENDPOINT",
                  "value": "[if(parameters('deployAzureOpenAI'), reference(resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai')), '2023-05-01').endpoint, '')]"
                },
                {
                  "name": "AOAI_KEY",
                  "secretRef": "aoaikey"
                },
                {
                  "name": "AOAI_DEPLOYMENT_CHAT",
                  "value": "[if(parameters('deployAzureOpenAI'), 'gpt-35-turbo-16k', '')]"
                },
                {
                  "name": "AOAI_DEPLOYMENT_EMBEDDING",
                  "value": "[if(parameters('deployAzureOpenAI'), 'text-embedding-ada-002', '')]"
                },
                {
                  "name": "MONGO_CONNECTIONSTRING",
                  "secretRef": "mongoconnectionstring"
                },
                {
                  "name": "AISEARCH_ENDPOINT",
                  "value": "[if(parameters('deployAzureAISearch'), format('https://{0}.search.windows.net', variables('uniqueShortName')), '')]"
                },
                {
                  "name": "AISEARCH_KEY",
                  "secretRef": "aisearchkey"
                },
                {
                  "name": "AISEARCH_INDEX",
                  "value": "wiki"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 0,
            "maxReplicas": 1,
            "rules": [
              {
                "name": "http-requests",
                "http": {
                  "metadata": {
                    "concurrentRequests": "50"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', variables('uniqueShortName'))]",
        "[resourceId('Microsoft.App/managedEnvironments', variables('uniqueShortName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', format(variables('uniqueNameFormat'), 'openai'), 'text-embedding-ada-002')]",
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', format(variables('uniqueNameFormat'), 'openai'), 'gpt-35-turbo-16k')]",
        "[resourceId('Microsoft.DocumentDB/mongoClusters', variables('uniqueShortName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai'))]"
      ]
    }
  ]
}